name: Deploy to VPS

on:
  push:
    branches:
      - main  # Change to your main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Add SSH private key to agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}  # Ensure this secret contains the SSH private key for your VPS

      - name: Debug SSH Port Connectivity
        run: |
          echo "Testing SSH connectivity to $VPS_HOST on port $VPS_PORT..."
          nc -zv $VPS_HOST $VPS_PORT
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_PORT: ${{ secrets.VPS_PORT }}    
            
      - name: Test SSH Connectivity
        run: |
          echo "Testing SSH connection to $VPS_HOST on port $VPS_PORT..."
          ssh -v -o StrictHostKeyChecking=no -p $VPS_PORT $VPS_USER@$VPS_HOST "echo 'SSH connection successful'"
        env:
          VPS_USER: ${{ secrets.VPS_USER }}       # The SSH username for your VPS
          VPS_HOST: ${{ secrets.VPS_HOST }}       # The public IP address or hostname of your VPS
          VPS_PORT: ${{ secrets.VPS_PORT }} 
        

      - name: Test SSH Connection to VPS
        env:
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_PORT: ${{ secrets.VPS_PORT }}
        run: |
          # Test SSH connection to the VPS using the provided user, host, and port
          echo "Testing SSH connection to $VPS_HOST on port $VPS_PORT..."
          ssh -v -o StrictHostKeyChecking=no -p $VPS_PORT $VPS_USER@$VPS_HOST "echo 'SSH connection successful'"

      - name: Set up SSH key for GitHub access
        env:
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_PORT: ${{ secrets.VPS_PORT }}
        run: |
          # Set up the SSH private key
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Add GitHub to known hosts to prevent SSH warnings
          ssh-keyscan github.com >> ~/.ssh/known_hosts
            

      - name: Test SSH Connection and Deploy
        env:
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_PORT: ${{ secrets.VPS_PORT }}
        run: |
          echo "Testing SSH connection and running deployment tasks..."
            
          ssh -v -o StrictHostKeyChecking=no -p $VPS_PORT $VPS_USER@$VPS_HOST "

          if [ ! -d '/home/$VPS_USER/Geopolitics' ]; then
            git clone git@github.com:AlexRuedaPayen/Geopolitics.git /home/$VPS_USER/Geopolitics
          else
            cd /home/$VPS_USER/Geopolitics && git pull origin main
          fi
          
          cd /home/$VPS_USER/Geopolitics
          python3 setup_environment.py 
          "
      - name: Deploy Dash App
        env:
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_PORT: ${{ secrets.VPS_PORT }}
        run: |
          
          ssh -v -o StrictHostKeyChecking=no -p $VPS_PORT $VPS_USER@$VPS_HOST "
           cd  /home/$VPS_USER/Geopolitics &&
            nohup venv/bin/python dash_app.py &
          "