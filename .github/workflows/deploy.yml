name: Deploy to VPS

on:
  push:
    branches:
      - main  # Change to your main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Add SSH private key to agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}  # Ensure this secret contains the SSH private key for your VPS

      - name: Debug SSH Port Connectivity
        run: |
          echo "Testing SSH connectivity to $VPS_HOST on port $VPS_PORT..."
          nc -zv $VPS_HOST $VPS_PORT
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_PORT: ${{ secrets.VPS_PORT }}    
            
      - name: Test SSH Connectivity
        run: |
          echo "Testing SSH connection to $VPS_HOST on port $VPS_PORT..."
          ssh -v -o StrictHostKeyChecking=no -p $VPS_PORT $VPS_USER@$VPS_HOST "echo 'SSH connection successful'"
        env:
          VPS_USER: ${{ secrets.VPS_USER }}       # The SSH username for your VPS
          VPS_HOST: ${{ secrets.VPS_HOST }}       # The public IP address or hostname of your VPS
          VPS_PORT: ${{ secrets.VPS_PORT }} 
        



      - name: Deploy to Server
        env:
          VPS_USER: ${{ secrets.VPS_USER }}       # The SSH username for your VPS
          VPS_HOST: ${{ secrets.VPS_HOST }}       # The public IP address or hostname of your VPS
          VPS_PORT: ${{ secrets.VPS_PORT }}       # The custom SSH port you're using for your VPS
        run: |

          # Add the VPS host key to known hosts to avoid "Host key verification failed" errors
          mkdir -p ~/.ssh
          ssh-keyscan -H $VPS_HOST -p $VPS_PORT >> ~/.ssh/known_hosts  # Ensure to use the custom port for SSH keyscan


          # SSH into the VPS and deploy
          ssh -p $VPS_PORT $VPS_USER@$VPS_HOST "
            # Check if the repo directory exists, otherwise clone it
            if [ ! -d '/home/$VPS_USER/Geopolitics' ]; then
              git clone git@github.com:AlexRuedaPayen/Geopolitics.git /home/$VPS_USER/Geopolitics  # Adjust repository URL
            else
              cd /home/$VPS_USER/Geopolitics && git pull origin main  # Pull latest changes if repo exists
            fi

            # Set up the environment and restart the service
            cd /home/$VPS_USER/Geopolitics
            python3 setup_environment.py  # Set up the environment (adjust if needed)
            sudo systemctl restart geopolitics-dashboard.service  # Restart your service after the update
          "
